<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Django on My Universe</title><link>https://www.my-universe.com/tags/django/</link><description>Recent content in Django on My Universe</description><generator>Hugo</generator><language>en-gb</language><lastBuildDate>Wed, 08 Nov 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://www.my-universe.com/tags/django/index.xml" rel="self" type="application/rss+xml"/><item><title>Colours in Django Models</title><link>https://www.my-universe.com/2017/11/08/colours-in-django-models/</link><pubDate>Wed, 08 Nov 2017 00:00:00 +0000</pubDate><guid>https://www.my-universe.com/2017/11/08/colours-in-django-models/</guid><description>&lt;p>Colours are quite a common property to real world objects. So naturally when building web applications, sooner or later one encounters the need to assign a colour attribute to an object. For &lt;a href="https://djangoproject.com">Django&lt;/a> developers, this usually means adding a &lt;code>models.CharField&lt;/code> to their model, ready to capture the colour&amp;rsquo;s &lt;a href="https://en.wikipedia.org/wiki/Web_colors#Hex_triplet">hex code&lt;/a>.&lt;/p>
&lt;p>Technically this works pretty well, as those hex codes can directly be used in HTML style attributes, embedded SVG drawings, etc. However, setting colour values via text input widget is quite tedious. On the frontend side, various libraries offer quite elaborate solutions for integrating nice colour picking widgets. For the Django admin, there is however a quite simple solution: use HTML 5 color inputs!&lt;/p></description></item></channel></rss>