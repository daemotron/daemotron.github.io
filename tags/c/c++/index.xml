<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>c/c++ on My Universe</title><link>https://daemotron.github.io/tags/c/c++/</link><description>Recent content in c/c++ on My Universe</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://daemotron.github.io/tags/c/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>Talk to the Log</title><link>https://daemotron.github.io/2023/01/14/talk-to-the-log/</link><pubDate>Sat, 14 Jan 2023 19:51:48 +0100</pubDate><guid>https://daemotron.github.io/2023/01/14/talk-to-the-log/</guid><description>Making an X-Plane plugin &amp;ldquo;talk&amp;rdquo; to us is one of the boilerplate tasks when setting up a new plugin project. X-Plane has its own log file, log.txt, which is found in X-Plane&amp;rsquo;s root folder. The file gets reset every time X-Plane starts, so there&amp;rsquo;s no need to rotate or trim it from time to time. As a plugin author, we have the choice to either write our own log file, or to jump on X-Plane&amp;rsquo;s bandwagon and use its logging system for our purposes.</description></item><item><title>CMake Linux Hack</title><link>https://daemotron.github.io/2023/01/11/cmake-linux-hack/</link><pubDate>Wed, 11 Jan 2023 00:16:46 +0100</pubDate><guid>https://daemotron.github.io/2023/01/11/cmake-linux-hack/</guid><description>Beginning with its most recent version (3.25 at the time of writing this post), CMake provides the LINUX variable, which I used in my previous post. Of course, developers on Linux tend to use the version of CMake they can install from their distribution&amp;rsquo;s package manager. On Ubuntu 22.04 LTS that would be 3.22, and even on the most recent Ubuntu version (22.10) we&amp;rsquo;re at 3.24 &amp;mdash; meaning this variable is not available in these CMake versions.</description></item><item><title>X-Plane Plugin Boilerplate</title><link>https://daemotron.github.io/2023/01/04/x-plane-plugin-boilerplate/</link><pubDate>Wed, 04 Jan 2023 15:28:28 +0100</pubDate><guid>https://daemotron.github.io/2023/01/04/x-plane-plugin-boilerplate/</guid><description>X-Plane has a well-documented, accessible API, making it relatively easy to write plugins for the simulator. In this post I&amp;rsquo;m going to demonstrate how a basic plugin boilerplate can look like, and how to build it on different platforms.
Let&amp;rsquo;s get started with some basics: X-Plane plugins are dynamically linked libraries, which are loaded by X-Plane at runtime. They have to provide an API as defined by the X-Plane SDK, so X-Plane can access the plugin via defined entry points.</description></item></channel></rss>